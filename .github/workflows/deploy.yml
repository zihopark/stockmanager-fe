name: 프론트엔드 자동 배포 (AWS EC2)

on:
  push:
    branches: 
      - main  # main 브랜치에 코드가 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # 작업이 실행될 환경

    steps:
      # 1. 레포지토리 코드 가져오기
      - name: 체크아웃
        uses: actions/checkout@v4.1.1
        
      # 2. 도커허브에 로그인
      - name: 도커허브에 로그인
        uses: docker/login-action@2c4e14e5c7a00b3be4b5d700e3f33b7157f7e78b
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_USER_PW }}
      
      # 3. 프론트엔드 Docker 이미지 빌드
      - name: 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}-fe .
      
      # 4. 도커허브에 푸시
      - name: 도커허브에 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}-fe
      
      # 5. AWS EC2에 ssh 접속 후 배포
      - name: AWS EC2에 ssh 접속 후 배포
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_IP }}
          port: 22
          username: ubuntu
          key: ${{ secrets.AWS_KEY }}  # AWS_KEY를 그대로 사용
          script: |
            echo "AWS 연결 중..."
            
            # 6. AWS EC2에서 최신 이미지 pull
            docker pull ${{ secrets.DOCKER_USER_NAME }}/stock-fe:latest


            # 7. 컨테이너 서비스 재시작
            docker compose down --volumes --remove-orphans
            docker compose build --no-cache
            docker compose up -d
            
            echo "배포 완료"
